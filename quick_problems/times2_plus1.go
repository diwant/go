package main

import (
	"fmt"
	"math/big"
	"time"
)

func main() {

	// Start time
	start := time.Now()

	// The number
	startNum := big.NewInt(0)
	// startNum, _ = startNum.SetString
	// 	10)
	startNum, _ = startNum.SetString("200", 10)

	// How Far Along Leading 1 is, Floored at Zero
	leadOneAt := startNum.BitLen() - 1
	if leadOneAt < 0 {
		leadOneAt = 0
	}
	fmt.Println("lead one at", leadOneAt)

	numOtherOnes := 0
	for _, b := range startNum.Bytes() {
		fmt.Println(b)
		if b == 1 {
			numOtherOnes++
		}
	}

	fmt.Println(numOtherOnes)

	// Print
	fmt.Println(leadOneAt + numOtherOnes)

	// Stop timer
	elapsed := time.Since(start)

	fmt.Println("Took", elapsed)
}
